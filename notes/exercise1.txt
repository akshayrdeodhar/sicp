1.1 (Evaluate)
10

12

8

(+ 8 -2) 6

a

b

(+ 3 (+ 3 1) (* 3 (+ 3 1))) (+ 3 4 (* 3 4)) (+ 3 4 12) 19

false

4

16

6

16

1.2
(/ (+ 5 
      (/ 1 2)
      (- 2
         (- 3
	    (+ 6
	       (/ 1 3)))))
   (* 3
      (- 6 2)
      (- 2 7))) 

1.3
	(define (sof-larger a b c)
	 	(define (smaller a b)
			(if (< a b) a
				    b))

		(define (smaller-3 a b c)
			 (smaller (smaller a b)
			 	  (smaller b c)))
			 	         
		(define (sqr a) (* a a))
	
		(- (+ (sqr a)
		      (sqr b)
		      (sqr c))
	 	      (sqr (smaller-3 a b c)))))

1.4
When b > 0, operator is -
otherwise, operator is +
So when b > 0
function is (- a b)
when b <= 0.
function is (+ a b)
equivalently, function is (- a |b|)
	

1.5

eval-apply is applicative order evaluation

the other method is fully expand then reduce
